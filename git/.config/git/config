[include]
    path = ~/.config/git/user

# Please fill in the user section a separate file in order to avoid committing
# email and name files to dotfile repo
#
# [user]
#    email =
#    name =


[alias]
    fid = !git flow init -d
    st = status
    df = diff
    co = checkout
    cob = co -b
    ci = commit
    cpb = !"git curbr | clip"
    amend = commit --amend
    br = branch
    curbr = rev-parse --abbrev-ref HEAD
    bra = branch -a
    brsync = !"git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs --no-run-if-empty git branch -d"
    poule = pull
    poush = push
    pushall = !git push && git co master && git push && git push --tags && git co develop
    pa = !"git co develop && git push && git co master && git push && git push --tags && git co develop"
    who = shortlog -sne
    oneline = log --pretty=oneline --abbrev-commit --graph
    changes = diff --name-status
    dic = diff --cached
    diffstat = diff --stat
    svnpull = svn rebase
    svnpush = svn dcommit
    reboot = checkout -- .
    sync = !"git syncmain; git remote prune origin; git brsync"
    syncmain = !"git checkout master; git pull; git checkout develop; git pull"
    pullall = !"git checkout master; git pull; git checkout develop; git pull"
    lc = !git oneline ORIG_HEAD.. --stat --no-merges
    addm = !git-ls-files -m -z | xargs -0 git-add && git status
    addu = !git-ls-files -o --exclude-standard -z | xargs -0 git-add && git status
    rmm = !git ls-files -d -z | xargs -0 git-rm && git status
    subl = !git-ls-files -m -z | xargs -0 subl
    sublall = !git-ls-files -m -o --exclude-standard -z | xargs -0 subl
    viewtags = tag -l --format='%(tag) %(subject)'
    s = status -s
    names=!"git status -s | cut -c4-"
    dos2unix = !"git names | xargs dos2unix"
    undo = !"git reset --hard && git clean -f"

    lgold = log --oneline --decorate --all --graph
    lg = log --color --abbrev-commit  --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    lga = log --all --color --abbrev-commit  --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    lgas = log --all --color --abbrev-commit  --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' -n 15
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"

    state = !"git fetch --prune ; git fetch --tags ; clear && git branch -vv && git status"
    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%Cred%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%Cred%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold blue)<%an>%Creset'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%Cred%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
    editconf = !$EDITOR -n -w ~/.config/git/config
    fco = !"git checkout $(git branch --all | fzf | tr -d '[:space:]')"
    pro = "remote prune origin"

[core]
    edit = "subl -n -w"
    editor = "subl -n -w"
	whitespace = cr-at-eol
	# autocrlf = true # Add this to user config when on windows

[push]
    default = simple
    followTags = true
    autoSetupRemote = true
[merge]
    tool = kdiff3

[diff]
    tool = kdiff3

[gc]
    autoDetach = false

[init]
    defaultBranch = main

[gitflow "prefix"]
    master = master/
    develop = develop/
    feature = feature/
    release = release/
    hotfix = hotfix/
    support = support/
    bugfix = bugfix/

[mergetool]
    keepBackup = false

[include]
    path = ~/.config/git/user